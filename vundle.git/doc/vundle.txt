*vundle.txt* Vundle the plug-in manager for Vim.     *vundle*

CONTENTS ~
                                                   *vundle-contents*
===========================================================================

1. About                                           |vundle-about|
2. Why Vundle                                      |vundle-why-vundle|
3. Quick start                                     |vundle-quickstart|
4. Scrips                                          |vundle-scripts|
   4.1. Configure scripts                          |vundle-scripts-configure|
   4.2. Installing scripts                         |vundle-scripts-install|
   4.3. Updating scripts                           |vundle-scripts-update|
   4.4. Searching scripts                          |vundle-scripts-search|
   4.5. Cleanup                                    |vundle-scripts-cleanup|
5. Interactive mode                                |vundle-interactive|

===========================================================================

ABOUT                                              *vundle-about*

Vundle is a short cut for Vim bundle and is the Vim plug-in manager.

2. WHY VUNDLE ~
                                                   *vundle-why-vundle*
Vundle allows to:

- keep track and configure your scripts right in `.vimrc`
- install configured scripts (aka bundle) 
- update configured scripts
- search [all available vim scripts] by name
- clean up from unused scripts

Also *Vundle* :

- manages runtime path of your installed scripts
- regenerates helptag atomatically

Vundle takes advantage of [vim-scripts.org](http://vim-scripts.org) 
in order to install/search [all available vim scripts]

3. QUICK START ~
                                                    *vundle-quickstart*
1) Setup Vundle: >

    git clone http://github.com/gmarik/vundle.git ~/.vim/vundle.git

2) Configure bundles:
   Append to your `~/.vimrc`: >

    set rtp+=~/.vim/vundle.git/ 
    call vundle#rc()

    " Bundles:
    Bundle "L9"
    Bundle "FuzzyFinder"
    Bundle "rails.vim"
    Bundle "ack.vim"
    Bundle "git://git.wincent.com/command-t.git"
    " ...

    " NOTE: if some plugins fail to work, put the config *between* lines:
    " filetype off
    " "Bundles here
    " filetype plugin indent on 

3) Install configured bundles:

   Launch `vim`, run >

   :BundleInstall

Installing requires [Git] and triggers [Git clone](http://gitref.org/creating/#clone) for 
each configured repo to `~/.vim/bundle/`.

4. SCRIPTS ~
                                                    *vundle-scripts*
4.1 CONFIGURE SCRIPTS ~
                                      *vundle-scripts-configure* *Bundle*
Before installing scripts they need to be configured. It's done using `Bundle`
command in `.vimrc`: >

    Bundle 'git_repo_uri'       " 'git_repo_uri' should be a valid uri to git repository 
or >
    Bundle 'script_name'        " 'script-name' should be an official script name (see |vundle-scripts-search| )

Vundle loves Github, that's why short uris can be used to configure bundles: >

  Bundle 'tpope/fugitive'

equals full uri >

  Bundle 'http://github.com/tpope/fugitive.git'


4.2 INSTALL SCRIPTS ~
                                      *vundle-scripts-install* *BundleInstall*
run >
    :BundleInstall

installs configured scripts. Newly installed scripts will be automatically
enabled. Except special cases requiring compilation or preconfiguration.

BundleInstall allows to install scripts by name:>

    :BundleIntall unite.vim

installs and activates unite.vim. You can use Tab to autocomplete known script names.
NOTE: installation, as just described, doesn't automatically configure scripts; 
you have to configure them manually.

4.3 UPDATE SCRIPTS ~
                                      *vundle-scripts-update* *BundleInstall!*
run >
    :BundleInstall!             " note bang(!)

installs or updates configured scripts.

4.4 SEARCHING ~
                                       *vundle-scripts-search* *BundleSearch*
run >
    :Bundles foo      " note plural Bundles not singular Bundle

lists bundles matching 'foo' in new a new split window, ie:
>
    Bundle "VimFootnotes"
    Bundle "foo.vim"
>
and >

   :Bundles! foo

refreshes script list before performing actual search.

If command is run without argument: >

   :Bundles!

it will display all known scripts

Searching requires [`curl`](http://curl.haxx.se/)

4.5 CLEANING UP ~
                                     *vundle-scripts-cleanup* *BundleClean*
run >

    :BundleClean

requires confirmation before removal of unused script-dirs from your `.vim/bundle`. 

                                                            *BundleClean!*  >
    :BundleClean! 

removes unused scripts with no questions.

5. INTERACTIVE MODE ~
                                    *vundle-interactive*
Vundle provides simple interactive mode to help you explore new scripts easily.
Interactive mode is available as result of :Bundles command. For instance running >

  :Bundles! unite

searches for scripts matching 'unite' string and yelds the result:

  "Keymap: i - Install bundle; c - Cleanup; r - Refine list; R - Reload list
  "Search results for: unite
  Bundle 'unite.vim'
  Bundle 'unite-yarm'
  Bundle 'unite-gem'
  Bundle 'unite-locate'
  Bundle 'unite-font'
  Bundle 'unite-colorscheme'

allows running certain commands with single keypress:
>
*i* - runs BundleInstall with name taken from line cursor is positioned on
*c* - runs BundleCleanup
*r* - alows to refine list; requires a string to refine list with
*R* - fetches fresh script list from server

vim:tw=78:ts=8:ft=help:norl:
